!pip install pulp tabulate matplotlib

import pulp
from tabulate import tabulate
import matplotlib.pyplot as plt

# Cria√ß√£o do modelo de otimiza√ß√£o
model = pulp.LpProblem("Maximizar_Lucro_Farmaceutica", pulp.LpMaximize)

# Vari√°veis de decis√£o (quantidade produzida de cada medicamento em cada f√°brica)
x1 = pulp.LpVariable("x1", lowBound=0)  # M1 em F1
x2 = pulp.LpVariable("x2", lowBound=0)  # M1 em F2
x3 = pulp.LpVariable("x3", lowBound=0)  # M2 em F1
x4 = pulp.LpVariable("x4", lowBound=0)  # M2 em F2
x5 = pulp.LpVariable("x5", lowBound=0)  # M2 em F3
x6 = pulp.LpVariable("x6", lowBound=0)  # M3 em F1
x7 = pulp.LpVariable("x7", lowBound=0)  # M3 em F2

# Fun√ß√£o objetivo: maximizar o lucro total
model += (
    1.5 * x1 + 1.3 * x2 + 1.8 * x3 +
    1.6 * x4 + 1.1 * x5 + 1.4 * x6 + 1.2 * x7
), "Lucro_Total"

# Restri√ß√µes de uso dos compostos
model += (2*x1 + 1*x2 + 3*x3 + 2*x4 + 1*x5 + 2*x6 + 1*x7 <= 2500), "Limite_Composto_A"
model += (3*x1 + 4*x2 + 2*x3 + 3*x4 + 1*x5 + 1*x6 + 0*x7 <= 3000), "Limite_Composto_B"
model += (1*x1 + 2*x2 + 1*x3 + 2*x4 + 1*x5 + 3*x6 + 4*x7 <= 2000), "Limite_Composto_C"

# Resolver o modelo
model.solve()

# Mapeamento descritivo para visualiza√ß√£o
label_map = {
    "x1": "M1 (Paracetamol) - F√°brica 1",
    "x2": "M1 (Paracetamol) - F√°brica 2",
    "x3": "M2 (Ibuprofeno) - F√°brica 1",
    "x4": "M2 (Ibuprofeno) - F√°brica 2",
    "x5": "M2 (Ibuprofeno) - F√°brica 3 (Terceirizada)",
    "x6": "M3 (Dipirona) - F√°brica 1",
    "x7": "M3 (Dipirona) - F√°brica 2"
}

# Coletar resultados
status = pulp.LpStatus[model.status]
lucro_total = pulp.value(model.objective)
variaveis = [(label_map[var.name], var.varValue) for var in model.variables()]

# ==== Resultado com melhor visual UX ====
print("="*50)
print("üîç  RESULTADO DA OTIMIZA√á√ÉO")
print("="*50)
print(f"üìä Status da Solu√ß√£o: \033[1m{status}\033[0m")
print(f"üí∞ Lucro M√°ximo Obtido: \033[1mR$ {lucro_total:,.2f}\033[0m\n")

print("üì¶ Distribui√ß√£o Otimizada da Produ√ß√£o:\n")
print(tabulate(variaveis, headers=["üß™ Medicamento e F√°brica", "üìà Unidades Produzidas"], tablefmt="fancy_grid"))

print("\nüìå Resumo Estrat√©gico:")
print("- A produ√ß√£o foi ajustada para maximizar o lucro total.")
print("- Foram priorizadas combina√ß√µes medicamento-f√°brica com maior retorno por grama.")
print("- Todas as restri√ß√µes de mat√©ria-prima foram respeitadas.")
print("- O gr√°fico a seguir ilustra visualmente a aloca√ß√£o ideal da produ√ß√£o.\n")

# ==== Gr√°fico de barras ====
nomes = [v[0] for v in variaveis]
valores = [v[1] for v in variaveis]

plt.figure(figsize=(10, 6))
bars = plt.bar(nomes, valores)
plt.title("üìä Produ√ß√£o Otimizada por Medicamento e F√°brica")
plt.xlabel("Medicamento e F√°brica")
plt.ylabel("Unidades Produzidas")
plt.xticks(rotation=45, ha='right')
plt.grid(axis='y')
plt.tight_layout()
plt.show()
